{{/*
=============================================================================
Unified Financial Services Platform - Kubernetes Secrets
=============================================================================
This template defines secure Kubernetes Secrets for the UFS platform,
including database credentials, JWT secrets, and third-party API keys.
All sensitive data is Base64 encoded and properly templated for security.

Security Features:
- Base64 encoding for all sensitive values
- Proper Kubernetes labeling for resource management
- Template-based secret values from Helm values
- Support for environment-specific overrides
- Financial services compliance considerations

Dependencies:
- values.yaml: Configuration values and secret placeholders
- _helpers.tpl: Helper templates for consistent naming and labeling
=============================================================================
*/}}

{{/*
Database Credentials Secret
Contains PostgreSQL and MongoDB connection credentials required by
financial services microservices for secure database access.
*/}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ufs.fullname" . }}-db-credentials
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    app.kubernetes.io/component: database-credentials
    ufs.platform/secret-type: database
    ufs.platform/compliance: financial-services
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/description: "Database credentials for PostgreSQL and MongoDB"
    ufs.platform/rotation-policy: "90-days"
    ufs.platform/access-level: "restricted"
    {{- if .Values.secrets.database.annotations }}
    {{- toYaml .Values.secrets.database.annotations | nindent 4 }}
    {{- end }}
type: Opaque
data:
  # PostgreSQL Connection Credentials
  # Used by: Customer Service, Auth Service, Transaction Service, Compliance Service
  postgresql-username: {{ .Values.secrets.database.postgres.username | b64enc | quote }}
  postgresql-password: {{ .Values.secrets.database.postgres.password | b64enc | quote }}
  postgresql-host: {{ .Values.global.postgresql.host | b64enc | quote }}
  postgresql-port: {{ .Values.global.postgresql.port | toString | b64enc | quote }}
  postgresql-database: {{ .Values.secrets.database.postgres.database | default "ufs_platform" | b64enc | quote }}
  postgresql-ssl-mode: {{ .Values.global.postgresql.sslMode | default "require" | b64enc | quote }}
  
  # MongoDB Connection Credentials  
  # Used by: Analytics Service, Customer Service (document storage), Audit logs
  mongodb-username: {{ .Values.secrets.database.mongo.username | b64enc | quote }}
  mongodb-password: {{ .Values.secrets.database.mongo.password | b64enc | quote }}
  mongodb-host: {{ .Values.global.mongodb.host | b64enc | quote }}
  mongodb-port: {{ .Values.global.mongodb.port | toString | b64enc | quote }}
  mongodb-auth-database: {{ .Values.global.mongodb.authDatabase | default "admin" | b64enc | quote }}
  mongodb-replica-set: {{ .Values.global.mongodb.replicaSet | default "rs0" | b64enc | quote }}
  
  # Database Connection Strings (for convenience)
  postgresql-url: {{ printf "postgresql://%s:%s@%s:%d/%s?sslmode=%s" 
    .Values.secrets.database.postgres.username 
    .Values.secrets.database.postgres.password 
    .Values.global.postgresql.host 
    (.Values.global.postgresql.port | int)
    (.Values.secrets.database.postgres.database | default "ufs_platform")
    (.Values.global.postgresql.sslMode | default "require") | b64enc | quote }}
  
  mongodb-uri: {{ printf "mongodb://%s:%s@%s:%d/%s?authSource=%s&replicaSet=%s" 
    .Values.secrets.database.mongo.username 
    .Values.secrets.database.mongo.password 
    .Values.global.mongodb.host 
    (.Values.global.mongodb.port | int)
    (.Values.secrets.database.mongo.database | default "ufs_analytics")
    (.Values.global.mongodb.authDatabase | default "admin")
    (.Values.global.mongodb.replicaSet | default "rs0") | b64enc | quote }}

{{/*
JWT Authentication Secret
Contains the secret key used for JWT token signing and verification
across all microservices in the platform.
*/}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ufs.fullname" . }}-jwt-secret
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    app.kubernetes.io/component: authentication
    ufs.platform/secret-type: jwt
    ufs.platform/compliance: financial-services
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/description: "JWT signing secret for authentication services"
    ufs.platform/rotation-policy: "30-days"
    ufs.platform/access-level: "highly-restricted"
    ufs.platform/algorithm: "HS512"
    {{- if .Values.secrets.jwt.annotations }}
    {{- toYaml .Values.secrets.jwt.annotations | nindent 4 }}
    {{- end }}
type: Opaque
data:
  # JWT Signing Secret - Used for token generation and validation
  jwt-secret: {{ .Values.secrets.jwt.secret | b64enc | quote }}
  
  # JWT Configuration Parameters
  jwt-algorithm: {{ .Values.secrets.jwt.algorithm | default "HS512" | b64enc | quote }}
  jwt-expiration: {{ .Values.secrets.jwt.expiration | default "3600" | toString | b64enc | quote }}
  jwt-refresh-expiration: {{ .Values.secrets.jwt.refreshExpiration | default "86400" | toString | b64enc | quote }}
  jwt-issuer: {{ .Values.secrets.jwt.issuer | default "ufs-platform" | b64enc | quote }}
  jwt-audience: {{ .Values.secrets.jwt.audience | default "ufs-services" | b64enc | quote }}

{{/*
Third-Party API Keys Secret
Contains API keys and credentials for external financial services
including payment processing, banking data, and credit scoring APIs.
*/}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ufs.fullname" . }}-api-keys
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    app.kubernetes.io/component: external-apis
    ufs.platform/secret-type: api-keys
    ufs.platform/compliance: financial-services
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/description: "Third-party API keys for financial services integration"
    ufs.platform/rotation-policy: "60-days"
    ufs.platform/access-level: "restricted"
    ufs.platform/pci-compliant: "true"
    {{- if .Values.secrets.apiKeys.annotations }}
    {{- toYaml .Values.secrets.apiKeys.annotations | nindent 4 }}
    {{- end }}
type: Opaque
data:
  # Stripe Payment Processing API Keys
  # Used by: Transaction Service, Payment Gateway
  stripe-api-key: {{ .Values.secrets.apiKeys.stripe | b64enc | quote }}
  stripe-publishable-key: {{ .Values.secrets.apiKeys.stripePublishable | default "" | b64enc | quote }}
  stripe-webhook-secret: {{ .Values.secrets.apiKeys.stripeWebhook | default "" | b64enc | quote }}
  
  # Plaid Banking Data API Keys  
  # Used by: Customer Service, Account Aggregation Service
  plaid-api-key: {{ .Values.secrets.apiKeys.plaid | b64enc | quote }}
  plaid-secret: {{ .Values.secrets.apiKeys.plaidSecret | default "" | b64enc | quote }}
  plaid-public-key: {{ .Values.secrets.apiKeys.plaidPublic | default "" | b64enc | quote }}
  plaid-environment: {{ .Values.secrets.apiKeys.plaidEnvironment | default "sandbox" | b64enc | quote }}
  
  # Experian Credit Scoring API Keys
  # Used by: Risk Assessment Service, Compliance Service  
  experian-api-key: {{ .Values.secrets.apiKeys.experian | b64enc | quote }}
  experian-secret: {{ .Values.secrets.apiKeys.experianSecret | default "" | b64enc | quote }}
  experian-username: {{ .Values.secrets.apiKeys.experianUsername | default "" | b64enc | quote }}
  experian-password: {{ .Values.secrets.apiKeys.experianPassword | default "" | b64enc | quote }}
  
  # Bloomberg Market Data API (if configured)
  {{- if .Values.secrets.apiKeys.bloomberg }}
  bloomberg-api-key: {{ .Values.secrets.apiKeys.bloomberg | b64enc | quote }}
  bloomberg-username: {{ .Values.secrets.apiKeys.bloombergUsername | default "" | b64enc | quote }}
  bloomberg-application-name: {{ .Values.secrets.apiKeys.bloombergApp | default "ufs-platform" | b64enc | quote }}
  {{- end }}
  
  # Thomson Reuters Regulatory Data API (if configured)
  {{- if .Values.secrets.apiKeys.thomson }}
  thomson-api-key: {{ .Values.secrets.apiKeys.thomson | b64enc | quote }}
  thomson-username: {{ .Values.secrets.apiKeys.thomsonUsername | default "" | b64enc | quote }}
  {{- end }}

{{/*
Additional Security Context Secrets
Contains additional security-related credentials for enhanced platform security.
*/}}
{{- if .Values.secrets.security.enabled | default false }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ufs.fullname" . }}-security-context
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    app.kubernetes.io/component: security
    ufs.platform/secret-type: security-context
    ufs.platform/compliance: financial-services
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/description: "Security context and encryption keys"
    ufs.platform/rotation-policy: "30-days"
    ufs.platform/access-level: "highly-restricted"
type: Opaque
data:
  # Application Encryption Keys
  {{- if .Values.secrets.security.encryptionKey }}
  app-encryption-key: {{ .Values.secrets.security.encryptionKey | b64enc | quote }}
  {{- end }}
  
  # OAuth2 Client Secrets
  {{- if .Values.secrets.security.oauth2 }}
  oauth2-client-secret: {{ .Values.secrets.security.oauth2.clientSecret | b64enc | quote }}
  oauth2-client-id: {{ .Values.secrets.security.oauth2.clientId | b64enc | quote }}
  {{- end }}
  
  # TLS Certificates and Keys (if not using cert-manager)
  {{- if .Values.secrets.security.tls }}
  tls-private-key: {{ .Values.secrets.security.tls.privateKey | b64enc | quote }}
  tls-certificate: {{ .Values.secrets.security.tls.certificate | b64enc | quote }}
  {{- if .Values.secrets.security.tls.caCertificate }}
  ca-certificate: {{ .Values.secrets.security.tls.caCertificate | b64enc | quote }}
  {{- end }}
  {{- end }}
{{- end }}

{{/*
Notification Service Secrets
Contains API keys and credentials for notification services including
email, SMS, and push notification providers.
*/}}
{{- if .Values.secrets.notifications.enabled | default false }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ufs.fullname" . }}-notification-secrets
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    app.kubernetes.io/component: notifications
    ufs.platform/secret-type: notification-keys
    ufs.platform/compliance: financial-services
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/description: "Notification service API keys and credentials"
    ufs.platform/rotation-policy: "90-days"
    ufs.platform/access-level: "restricted"
type: Opaque
data:
  # Email Service Credentials (SMTP)
  {{- if .Values.secrets.notifications.email }}
  smtp-username: {{ .Values.secrets.notifications.email.username | b64enc | quote }}
  smtp-password: {{ .Values.secrets.notifications.email.password | b64enc | quote }}
  smtp-host: {{ .Values.secrets.notifications.email.host | b64enc | quote }}
  smtp-port: {{ .Values.secrets.notifications.email.port | toString | b64enc | quote }}
  {{- end }}
  
  # SMS Service Credentials (Twilio)
  {{- if .Values.secrets.notifications.sms }}
  twilio-account-sid: {{ .Values.secrets.notifications.sms.accountSid | b64enc | quote }}
  twilio-auth-token: {{ .Values.secrets.notifications.sms.authToken | b64enc | quote }}
  twilio-from-number: {{ .Values.secrets.notifications.sms.fromNumber | b64enc | quote }}
  {{- end }}
  
  # Push Notification Service (FCM)
  {{- if .Values.secrets.notifications.push }}
  fcm-server-key: {{ .Values.secrets.notifications.push.serverKey | b64enc | quote }}
  fcm-project-id: {{ .Values.secrets.notifications.push.projectId | b64enc | quote }}
  {{- end }}
{{- end }}

{{/*
Monitoring and Observability Secrets
Contains credentials for monitoring tools and observability platforms.
*/}}
{{- if .Values.secrets.monitoring.enabled | default false }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ufs.fullname" . }}-monitoring-secrets
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
    ufs.platform/secret-type: monitoring-keys
    ufs.platform/compliance: financial-services
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/description: "Monitoring and observability service credentials"
    ufs.platform/rotation-policy: "180-days"
    ufs.platform/access-level: "monitoring"
type: Opaque
data:
  # New Relic APM
  {{- if .Values.secrets.monitoring.newrelic }}
  newrelic-license-key: {{ .Values.secrets.monitoring.newrelic.licenseKey | b64enc | quote }}
  newrelic-app-name: {{ .Values.secrets.monitoring.newrelic.appName | default "ufs-platform" | b64enc | quote }}
  {{- end }}
  
  # Splunk Logging
  {{- if .Values.secrets.monitoring.splunk }}
  splunk-token: {{ .Values.secrets.monitoring.splunk.token | b64enc | quote }}
  splunk-url: {{ .Values.secrets.monitoring.splunk.url | b64enc | quote }}
  {{- end }}
  
  # Sentry Error Tracking
  {{- if .Values.secrets.monitoring.sentry }}
  sentry-dsn: {{ .Values.secrets.monitoring.sentry.dsn | b64enc | quote }}
  sentry-environment: {{ .Values.secrets.monitoring.sentry.environment | default .Values.global.environment | b64enc | quote }}
  {{- end }}
{{- end }}