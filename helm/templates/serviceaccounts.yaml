{{/*
Unified Financial Services Platform - ServiceAccount Template
This template creates Kubernetes ServiceAccounts for each microservice in the platform,
implementing security best practices and the principle of least privilege for financial services.
*/}}

{{/*
Create ServiceAccount for each enabled microservice
Iterates through all defined services and conditionally creates ServiceAccounts
*/}}
{{- $serviceAccountConfig := .Values.serviceAccount -}}
{{- $globalConfig := .Values.global -}}

{{/*
Global ServiceAccount - Created if global serviceAccount creation is enabled
*/}}
{{- if $serviceAccountConfig.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service-type: "platform"
    ufs.platform/security-tier: "standard"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/created-by: "helm-template"
    ufs.platform/service-account-type: "global"
    {{- if .Values.global.compliance }}
    {{- if .Values.global.compliance.pci }}
    ufs.platform/pci-dss-compliant: "true"
    {{- end }}
    {{- if .Values.global.compliance.sox }}
    ufs.platform/sox-compliant: "true"
    {{- end }}
    {{- end }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
automountServiceAccountToken: {{ $serviceAccountConfig.automountServiceAccountToken | default false }}
{{- end }}

{{/*
API Gateway ServiceAccount - Critical financial service entry point
*/}}
{{- if hasKey .Values "api-gateway" }}
{{- $service := index .Values "api-gateway" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-api-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "api-gateway"
    ufs.platform/service-type: "gateway"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "external"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "api-gateway"
    ufs.platform/requires-ingress: "true"
    ufs.platform/rate-limiting: "enabled"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Discovery Service ServiceAccount - Service mesh coordination
*/}}
{{- if hasKey .Values "discovery-service" }}
{{- $service := index .Values "discovery-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-discovery-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "discovery-service"
    ufs.platform/service-type: "infrastructure"
    ufs.platform/security-tier: "important"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "discovery-service"
    ufs.platform/service-registry: "eureka"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Configuration Server ServiceAccount - Centralized configuration management
*/}}
{{- if hasKey .Values "config-server" }}
{{- $service := index .Values "config-server" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-config-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "config-server"
    ufs.platform/service-type: "infrastructure"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "config-server"
    ufs.platform/configuration-management: "spring-cloud-config"
    ufs.platform/security-sensitive: "true"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Authentication Service ServiceAccount - Critical security component
*/}}
{{- if hasKey .Values "auth-service" }}
{{- $service := index .Values "auth-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-auth-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "auth-service"
    ufs.platform/service-type: "security"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "auth-service"
    ufs.platform/authentication-provider: "oauth2"
    ufs.platform/jwt-enabled: "true"
    ufs.platform/mfa-required: "true"
    ufs.platform/security-audit: "enabled"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Customer Service ServiceAccount - Customer data processing
*/}}
{{- if hasKey .Values "customer-service" }}
{{- $service := index .Values "customer-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-customer-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "customer-service"
    ufs.platform/service-type: "business"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
    ufs.platform/data-classification: "pii"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "customer-service"
    ufs.platform/kyc-enabled: "true"
    ufs.platform/gdpr-compliant: "true"
    ufs.platform/data-encryption: "required"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Risk Assessment Service ServiceAccount - AI/ML risk analysis
*/}}
{{- if hasKey .Values "risk-assessment-service" }}
{{- $service := index .Values "risk-assessment-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-risk-assessment-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "risk-assessment-service"
    ufs.platform/service-type: "analytics"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
    ufs.platform/ml-enabled: "true"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "risk-assessment-service"
    ufs.platform/tensorflow-version: "2.15"
    ufs.platform/model-serving: "enabled"
    ufs.platform/batch-processing: "supported"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Compliance Service ServiceAccount - Regulatory compliance monitoring
*/}}
{{- if hasKey .Values "compliance-service" }}
{{- $service := index .Values "compliance-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-compliance-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "compliance-service"
    ufs.platform/service-type: "compliance"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "compliance-service"
    ufs.platform/regulatory-frameworks: "basel3,basel4,psd3,gdpr,sox"
    ufs.platform/audit-trail: "required"
    ufs.platform/monitoring-level: "comprehensive"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Transaction Service ServiceAccount - Core financial transaction processing
*/}}
{{- if hasKey .Values "transaction-service" }}
{{- $service := index .Values "transaction-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-transaction-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "transaction-service"
    ufs.platform/service-type: "core-banking"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
    ufs.platform/data-classification: "financial"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "transaction-service"
    ufs.platform/transaction-processing: "enabled"
    ufs.platform/acid-compliance: "required"
    ufs.platform/real-time-processing: "enabled"
    ufs.platform/fraud-detection: "integrated"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Analytics Service ServiceAccount - Financial data analytics and reporting
*/}}
{{- if hasKey .Values "analytics-service" }}
{{- $service := index .Values "analytics-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-analytics-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "analytics-service"
    ufs.platform/service-type: "analytics"
    ufs.platform/security-tier: "important"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "analytics-service"
    ufs.platform/spark-enabled: "true"
    ufs.platform/streaming-processing: "enabled"
    ufs.platform/data-lake-access: "required"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Financial Wellness Service ServiceAccount - Personal finance management
*/}}
{{- if hasKey .Values "financial-wellness-service" }}
{{- $service := index .Values "financial-wellness-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-financial-wellness-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "financial-wellness-service"
    ufs.platform/service-type: "customer-facing"
    ufs.platform/security-tier: "important"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "financial-wellness-service"
    ufs.platform/recommendation-engine: "enabled"
    ufs.platform/goal-tracking: "supported"
    ufs.platform/personal-finance: "true"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
AI Service ServiceAccount - Machine Learning and Artificial Intelligence
*/}}
{{- if hasKey .Values "ai-service" }}
{{- $service := index .Values "ai-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-ai-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "ai-service"
    ufs.platform/service-type: "ai-ml"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
    ufs.platform/compute-intensive: "true"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "ai-service"
    ufs.platform/tensorflow-version: "2.15"
    ufs.platform/pytorch-version: "2.1"
    ufs.platform/model-inference: "enabled"
    ufs.platform/explainability: "shap"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Blockchain Service ServiceAccount - Distributed ledger and smart contracts
*/}}
{{- if hasKey .Values "blockchain-service" }}
{{- $service := index .Values "blockchain-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-blockchain-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "blockchain-service"
    ufs.platform/service-type: "blockchain"
    ufs.platform/security-tier: "critical"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "blockchain-service"
    ufs.platform/hyperledger-fabric: "2.5"
    ufs.platform/consensus-algorithm: "raft"
    ufs.platform/chaincode-enabled: "true"
    ufs.platform/settlement-processing: "enabled"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}

{{/*
Notification Service ServiceAccount - Multi-channel notification system
*/}}
{{- if hasKey .Values "notification-service" }}
{{- $service := index .Values "notification-service" }}
{{- if and $service.enabled (or $service.serviceAccount.create $serviceAccountConfig.create) }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "ufs.fullname" . }}-notification-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ufs.labels" . | nindent 4 }}
    ufs.platform/service: "notification-service"
    ufs.platform/service-type: "communication"
    ufs.platform/security-tier: "standard"
    ufs.platform/network-exposure: "internal"
  annotations:
    {{- include "ufs.annotations" . | nindent 4 }}
    ufs.platform/service-account-type: "microservice"
    ufs.platform/service-name: "notification-service"
    ufs.platform/email-enabled: "true"
    ufs.platform/sms-enabled: "true"
    ufs.platform/push-notifications: "enabled"
    ufs.platform/template-engine: "enabled"
    {{- if $service.serviceAccount }}
    {{- with $service.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- else }}
    {{- with $serviceAccountConfig.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
automountServiceAccountToken: {{ if $service.serviceAccount }}{{ $service.serviceAccount.automountServiceAccountToken | default false }}{{ else }}{{ $serviceAccountConfig.automountServiceAccountToken | default false }}{{ end }}
{{- end }}
{{- end }}