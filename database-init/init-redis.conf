# Redis Configuration for Unified Financial Services Platform
# Designed for caching, session storage, and real-time data processing
# Optimized for high availability, performance, and security in financial services

################################## NETWORK #####################################

# Accept connections on all interfaces for containerized deployment
bind 0.0.0.0

# Default port for Redis
port 6379

# TCP listen() backlog for high-concurrency financial applications
tcp-backlog 511

# Close connection after client is idle for N seconds (0 to disable)
timeout 300

# TCP keepalive for detecting dead clients in financial transactions
tcp-keepalive 300

################################# TLS/SSL ######################################

# TLS/SSL configuration for secure connections in financial environments
# tls-port 6380
# tls-cert-file /etc/redis/tls/redis.crt
# tls-key-file /etc/redis/tls/redis.key
# tls-ca-cert-file /etc/redis/tls/ca.crt
# tls-dh-params-file /etc/redis/tls/redis.dh

################################# GENERAL #####################################

# Run as daemon (set to no for containerized environments)
daemonize no

# Process supervision for container orchestration
supervised no

# PID file location (not used in containerized deployment)
pidfile /var/run/redis_6379.pid

# Log level: debug, verbose, notice, warning
# Set to notice for production financial services
loglevel notice

# Log to stdout for container log aggregation
logfile ""

# Set database count (default 16, financial services typically use fewer)
databases 16

# Show Redis logo on startup
always-show-logo no

# Set server verbosity to avoid information disclosure
set-proc-title yes
proc-title-template "{title} {listen-addr} {server-mode}"

################################ SNAPSHOTTING  ################################

# Save database snapshots for data persistence in financial applications
# Format: save <seconds> <changes>
# Save if at least 1 key changed in 900 seconds (15 minutes)
save 900 1
# Save if at least 10 keys changed in 300 seconds (5 minutes)
save 300 10
# Save if at least 10000 keys changed in 60 seconds (1 minute)
save 60 10000

# Stop accepting writes if last background save failed
stop-writes-on-bgsave-error yes

# Compress string objects using LZF when dumping
rdbcompression yes

# Checksum RDB files for data integrity (critical for financial data)
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# RDB and AOF files directory
dir /data

################################# REPLICATION #################################

# Replication configuration for high availability
# Uncomment and configure for master-replica setup
# replicaof <master-ip> <master-port>

# Authentication password for master (use environment variable)
# masterauth <master-password>

# Serve stale data when replica loses connection to master
replica-serve-stale-data yes

# Allow writes on replica (usually no for financial data consistency)
replica-read-only yes

# Ping replicas every N seconds
repl-ping-replica-period 10

# Replication timeout
repl-timeout 60

# Disable TCP_NODELAY for replica socket
repl-disable-tcp-nodelay no

# Replica priority for sentinel failover
replica-priority 100

# Minimum replicas for master to accept writes (financial safety)
min-replicas-to-write 1
min-replicas-max-lag 10

################################## SECURITY ###################################

# Require authentication for financial services security
requirepass ${REDIS_PASSWORD}

# Disable dangerous commands in financial environment
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command CONFIG "CONFIG_b837d43c9a"
rename-command DEBUG ""
rename-command EVAL "EVAL_b837d43c9a"

# Protected mode for additional security
protected-mode yes

################################### CLIENTS ####################################

# Maximum number of connected clients for financial services load
maxclients 10000

############################## MEMORY MANAGEMENT #############################

# Maximum memory usage (critical for financial services stability)
maxmemory 2gb

# Memory eviction policy for caching in financial applications
# allkeys-lru: Remove least recently used keys (good for general caching)
maxmemory-policy allkeys-lru

# Memory sampling for LRU eviction
maxmemory-samples 5

# Memory usage threshold for replica output buffers
replica-output-buffer-limit normal 256mb 64mb 60
replica-output-buffer-limit pubsub 32mb 8mb 60

# Client output buffer limits for financial application connections
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

############################# LAZY FREEING ####################################

# Lazy freeing for better performance in high-throughput financial systems
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no

# Delete expired keys in background for better responsiveness
lazyfree-lazy-user-del no

############################ KERNEL OOM CONTROL ##############################

# OOM score adjustment for process prioritization
oom-score-adj no

# Disable OOM killer for critical financial services
oom-score-adj-values 0 200 800

############################ KERNEL TRANSPARENT HUGEPAGE ######################

# Disable transparent huge pages for consistent latency
disable-thp yes

############################## APPEND ONLY FILE ###############################

# Enable AOF persistence for financial data durability
appendonly yes

# AOF filename
appendfilename "appendonly.aof"

# AOF fsync policy for financial data integrity
# everysec: Good balance of performance and durability for financial services
appendfsync everysec

# Don't fsync during rewrites to avoid blocking
no-appendfsync-on-rewrite no

# AOF rewrite trigger conditions
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Load truncated AOF file on startup
aof-load-truncated yes

# Use mixed persistence for optimal performance and durability
aof-use-rdb-preamble yes

# AOF rewrite buffer size
aof-rewrite-incremental-fsync yes

################################ LUA SCRIPTING  ###############################

# Lua script timeout (milliseconds)
lua-time-limit 5000

################################ REDIS CLUSTER  ###############################

# Cluster configuration for financial services scalability
# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000
# cluster-replica-validity-factor 10
# cluster-migration-barrier 1
# cluster-require-full-coverage yes

################################## SLOW LOG ###################################

# Log queries slower than microseconds (financial performance monitoring)
slowlog-log-slower-than 10000

# Maximum length of slow log
slowlog-max-len 128

################################ LATENCY MONITOR ##############################

# Latency monitoring for financial services SLA compliance
latency-monitor-threshold 100

############################# EVENT NOTIFICATION ##############################

# Keyspace notifications for financial event processing
notify-keyspace-events ""

############################### GOPHER SERVER ################################

# Disable Gopher protocol for security
# gopher-enabled no

############################### ADVANCED CONFIG #############################

# Hash table rehashing for performance optimization
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List compression for memory efficiency
list-max-ziplist-size -2
list-compress-depth 0

# Set optimization
set-max-intset-entries 512

# Sorted set optimization
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog sparse representation
hll-sparse-max-bytes 3000

# Streams optimization for financial event processing
stream-node-max-bytes 4kb
stream-node-max-entries 100

# Active rehashing for consistent performance
activerehashing yes

# Output buffer limits for pub/sub in financial messaging
client-output-buffer-limit pubsub 32mb 8mb 60

# Frequency of rehashing background task
hz 10

# Enable dynamic HZ for adaptive performance
dynamic-hz yes

# AOF loading progress report
aof-load-truncated yes

# RDB loading progress report (disabled for security)
rdb-save-incremental-fsync yes

# Jemalloc background thread for memory optimization
jemalloc-bg-thread yes

# IO threads configuration for high-performance financial workloads
io-threads 4
io-threads-do-reads yes

# Tracking configuration for advanced debugging
tracking-table-max-keys 1000000

################################ FINANCIAL SERVICES OPTIMIZATIONS #############

# Connection pool compatibility settings (from technical specs)
# These align with the connection pool configuration:
# max_connections: 50, socket_timeout: 5, socket_connect_timeout: 5

# TCP keepalive aligned with connection pool health checks
tcp-keepalive 30

# Memory usage tracking for financial compliance
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Persistence settings optimized for financial transaction durability
save 900 1 300 10 60 10000
appendfsync everysec
auto-aof-rewrite-percentage 100

# Security hardening for financial services
protected-mode yes
# Authentication required (password set via environment variable)

# Performance monitoring for SLA compliance
slowlog-log-slower-than 10000
latency-monitor-threshold 100

# High availability settings for financial services uptime requirements
replica-serve-stale-data yes
replica-read-only yes
min-replicas-to-write 1
min-replicas-max-lag 10

################################ END OF CONFIG ################################