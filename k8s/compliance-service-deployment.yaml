apiVersion: apps/v1
kind: Deployment
metadata:
  name: compliance-service
  namespace: financial-services
  labels:
    app: compliance-service
    tier: backend
    component: compliance
    version: v1.0.0
    criticality: high
    managed-by: argocd
  annotations:
    deployment.kubernetes.io/revision: "1"
    argocd.argoproj.io/sync-wave: "2"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: compliance-service
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: compliance-service
        tier: backend
        component: compliance
        version: v1.0.0
        qos-class: burstable
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        fluentd/parse: "json"
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: compliance-service-sa
      imagePullSecrets:
        - name: harbor-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: compliance-service
          image: harbor.financial-platform.com/ufs/compliance-service:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              name: management
              protocol: TCP
            - containerPort: 8090
              name: debug
              protocol: TCP
          envFrom:
            - configMapRef:
                name: global-config
            - configMapRef:
                name: compliance-service-config
            - configMapRef:
                name: kafka-config
            - secretRef:
                name: database-secrets
            - secretRef:
                name: regulatory-api-secrets
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: SERVER_PORT
              value: "8080"
            - name: MANAGEMENT_SERVER_PORT
              value: "8081"
            - name: JAVA_OPTS
              value: "-Xms1536m -Xmx1536m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseStringDeduplication -Djava.security.egd=file:/dev/./urandom"
            - name: TZ
              value: "UTC"
            - name: COMPLIANCE_SERVICE_VERSION
              value: "1.0.0"
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
              ephemeral-storage: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
              ephemeral-storage: "2Gi"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 12
            successThreshold: 1
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: logs-volume
              mountPath: /app/logs
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: regulatory-rules-volume
              mountPath: /app/regulatory-rules
              readOnly: true
            - name: cache-volume
              mountPath: /app/cache
      volumes:
        - name: tmp-volume
          emptyDir:
            sizeLimit: 100Mi
        - name: logs-volume
          emptyDir:
            sizeLimit: 500Mi
        - name: config-volume
          configMap:
            name: compliance-service-config
            defaultMode: 0644
        - name: regulatory-rules-volume
          configMap:
            name: regulatory-rules-config
            defaultMode: 0644
        - name: cache-volume
          emptyDir:
            sizeLimit: 256Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - compliance-service
                topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                      - worker
                      - compute
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: workload-type
                    operator: In
                    values:
                      - financial-services
                      - compliance
      tolerations:
        - key: financial-services
          operator: Equal
          value: "true"
          effect: NoSchedule
        - key: compliance-workload
          operator: Equal
          value: "true"
          effect: NoSchedule
      priorityClassName: financial-services-high-priority
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: compliance-service
        - maxSkew: 2
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: compliance-service