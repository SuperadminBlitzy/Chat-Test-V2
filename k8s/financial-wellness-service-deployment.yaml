# Financial Wellness Service Kubernetes Deployment
# This deployment follows enterprise-grade best practices for financial services
# including security hardening, resource optimization, and monitoring integration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: financial-wellness-service
  namespace: default
  labels:
    app: financial-wellness-service
    version: "1.0.0"
    component: financial-wellness
    tier: business-logic
    managed-by: argocd
    environment: production
    criticality: high
  annotations:
    # Deployment metadata for tracking and automation
    deployment.kubernetes.io/revision: "1"
    argocd.argoproj.io/sync-wave: "2"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
    # Financial services compliance annotations
    compliance.financial-platform.com/pci-dss: "required"
    compliance.financial-platform.com/sox: "applicable"
    security.financial-platform.com/security-scan: "completed"
spec:
  # Replica configuration for high availability
  replicas: 2
  # Deployment strategy for zero-downtime deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  # Selector for pod management
  selector:
    matchLabels:
      app: financial-wellness-service
      version: "1.0.0"
  # Pod template specification
  template:
    metadata:
      labels:
        app: financial-wellness-service
        version: "1.0.0"
        component: financial-wellness
        tier: business-logic
        qos-class: burstable
        security-policy: restricted
      annotations:
        # Prometheus monitoring configuration
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
        # Security and compliance annotations
        container.apparmor.security.beta.kubernetes.io/financial-wellness-service: runtime/default
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        # Sidecar injection for service mesh (if Istio is enabled)
        sidecar.istio.io/inject: "true"
        # Resource optimization annotations
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      # Service account for RBAC and security
      serviceAccountName: financial-wellness-service-sa
      # Security context for the entire pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      # DNS configuration for service discovery
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "2"
          - name: edns0
      # Container specifications
      containers:
        - name: financial-wellness-service
          # Container image with specific version tag
          image: ufs/financial-wellness-service:1.0.0
          imagePullPolicy: IfNotPresent
          # Container ports configuration
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: actuator
              containerPort: 8080
              protocol: TCP
          # Resource requests and limits for predictable performance
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
              ephemeral-storage: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
              ephemeral-storage: "2Gi"
          # Security context for container-level security
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            seccompProfile:
              type: RuntimeDefault
          # Liveness probe for container health monitoring
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          # Readiness probe for traffic routing decisions
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          # Startup probe for slow-starting containers
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 30
          # Environment variables from ConfigMap and Secrets
          envFrom:
            - configMapRef:
                name: financial-wellness-service-config
            - secretRef:
                name: financial-wellness-service-secrets
          # Additional environment variables for container configuration
          env:
            - name: JAVA_OPTS
              value: "-Xms768m -Xmx1536m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
            - name: SERVER_PORT
              value: "8080"
            - name: MANAGEMENT_SERVER_PORT
              value: "8080"
            - name: SPRING_PROFILES_ACTIVE
              value: "production"
            - name: TZ
              value: "UTC"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          # Volume mounts for temporary and cache directories
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
            - name: logs
              mountPath: /app/logs
      # Volumes for temporary storage and logging
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir:
            sizeLimit: "1Gi"
        - name: logs
          emptyDir:
            sizeLimit: "2Gi"
      # Image pull secrets for private registries
      imagePullSecrets:
        - name: docker-registry-secret
      # Restart policy for failed containers
      restartPolicy: Always
      # Termination grace period for graceful shutdown
      terminationGracePeriodSeconds: 30
      # Node selection and scheduling constraints
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/worker: "true"
      # Tolerations for node taints
      tolerations:
        - key: "financial-services"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      # Affinity rules for optimal pod placement
      affinity:
        # Pod anti-affinity to spread replicas across nodes
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - financial-wellness-service
                topologyKey: kubernetes.io/hostname
        # Node affinity for preferred scheduling on specific nodes
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: workload-type
                    operator: In
                    values:
                      - financial-services
            - weight: 50
              preference:
                matchExpressions:
                  - key: instance-type
                    operator: In
                    values:
                      - compute-optimized
      # Priority class for pod scheduling priority
      priorityClassName: financial-services-high-priority