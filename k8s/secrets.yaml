# Kubernetes Secrets Configuration for Unified Financial Services Platform
# This file defines all secrets required for secure credential storage across microservices
# Secrets are base64 encoded and should be managed through Vault integration in production

apiVersion: v1
kind: Secret
metadata:
  name: db-credentials-postgres
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "PostgreSQL database credentials for transactional data and customer profiles"
type: Opaque
data:
  POSTGRES_USER: <base64_encoded_username>
  POSTGRES_PASSWORD: <base64_encoded_password>

---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials-mongo
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "MongoDB credentials for document storage and analytics data"
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: <base64_encoded_username>
  MONGO_INITDB_ROOT_PASSWORD: <base64_encoded_password>

---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials-redis
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "Redis credentials for session storage and caching"
type: Opaque
data:
  REDIS_PASSWORD: <base64_encoded_password>

---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials-influxdb
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "InfluxDB credentials for time-series financial metrics and monitoring"
type: Opaque
data:
  INFLUXDB_ADMIN_USER: <base64_encoded_username>
  INFLUXDB_ADMIN_PASSWORD: <base64_encoded_password>

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: authentication
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "JWT signing secret for authentication and authorization services"
type: Opaque
data:
  JWT_SECRET: <base64_encoded_jwt_secret_key>

---
apiVersion: v1
kind: Secret
metadata:
  name: third-party-api-keys
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: external-services
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "API keys and credentials for third-party financial services integration"
type: Opaque
data:
  # Payment Processing
  STRIPE_API_KEY: <base64_encoded_stripe_api_key>
  
  # Banking Data and Account Aggregation
  PLAID_CLIENT_ID: <base64_encoded_plaid_client_id>
  PLAID_SECRET: <base64_encoded_plaid_secret>
  
  # Credit Risk Assessment
  EXPERIAN_API_KEY: <base64_encoded_experian_api_key>
  
  # Market Data Providers
  BLOOMBERG_API_KEY: <base64_encoded_bloomberg_api_key>
  THOMSON_REUTERS_API_KEY: <base64_encoded_thomson_reuters_api_key>
  
  # Identity and Authentication Services
  AUTH0_DOMAIN: <base64_encoded_auth0_domain>
  AUTH0_CLIENT_ID: <base64_encoded_auth0_client_id>
  AUTH0_CLIENT_SECRET: <base64_encoded_auth0_client_secret>
  
  # Multi-Factor Authentication and Communication
  TWILIO_ACCOUNT_SID: <base64_encoded_twilio_account_sid>
  TWILIO_AUTH_TOKEN: <base64_encoded_twilio_auth_token>
  
  # KYC and Identity Verification Services
  JUMIO_API_TOKEN: <base64_encoded_jumio_api_token>
  JUMIO_API_SECRET: <base64_encoded_jumio_api_secret>
  ONFIDO_API_TOKEN: <base64_encoded_onfido_api_token>
  
  # AI/ML Services for Financial Analytics
  OPENAI_API_KEY: <base64_encoded_openai_api_key>
  GOOGLE_CLOUD_VISION_API_KEY: <base64_encoded_google_cloud_vision_api_key>
  
  # Fraud Detection and Risk Analytics
  AWS_FRAUD_DETECTOR_ACCESS_KEY_ID: <base64_encoded_aws_access_key_id>
  AWS_FRAUD_DETECTOR_SECRET_ACCESS_KEY: <base64_encoded_aws_secret_access_key>
  SAS_VIYA_API_KEY: <base64_encoded_sas_viya_api_key>
  
  # Monitoring and Analytics Services
  NEW_RELIC_LICENSE_KEY: <base64_encoded_new_relic_license_key>
  SPLUNK_HEC_TOKEN: <base64_encoded_splunk_hec_token>
  SENTRY_DSN: <base64_encoded_sentry_dsn>

---
apiVersion: v1
kind: Secret
metadata:
  name: kafka-credentials
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "Apache Kafka credentials for event streaming and real-time data processing"
type: Opaque
data:
  KAFKA_USERNAME: <base64_encoded_kafka_username>
  KAFKA_PASSWORD: <base64_encoded_kafka_password>

---
apiVersion: v1
kind: Secret
metadata:
  name: blockchain-credentials
  namespace: ufs-backend
  labels:
    app.kubernetes.io/name: ufs-backend
    app.kubernetes.io/component: blockchain
    app.kubernetes.io/part-of: financial-services-platform
  annotations:
    kubernetes.io/description: "Hyperledger Fabric network credentials for blockchain-based settlement processing"
type: Opaque
data:
  # Hyperledger Fabric Certificate Authority certificate
  FABRIC_CA_CERT: <base64_encoded_fabric_ca_cert>
  
  # Peer private key for transaction signing and network participation
  FABRIC_PEER_KEY: <base64_encoded_fabric_peer_key>
  
  # Peer certificate for identity verification in the blockchain network
  FABRIC_PEER_CERT: <base64_encoded_fabric_peer_cert>