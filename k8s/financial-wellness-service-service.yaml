apiVersion: v1
kind: Service
metadata:
  name: financial-wellness-service
  namespace: financial-services
  labels:
    app: financial-wellness-service
    component: backend
    tier: microservice
    environment: production
    team: financial-services
    version: v1.0.0
    criticality: high
    qos-class: guaranteed
    compliance.financial: "true"
    service.type: "business-logic"
    monitoring.enabled: "true"
  annotations:
    # Service discovery and monitoring
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/scheme: "http"
    
    # Service mesh configuration
    istio.io/service-monitoring: "enabled"
    istio.io/circuit-breaker: "enabled"
    istio.io/retry-policy: "enabled"
    
    # Financial services compliance
    compliance.pci-dss: "required"
    compliance.sox: "required"
    compliance.gdpr: "required"
    
    # Load balancing and traffic management
    service.beta.kubernetes.io/load-balancer-source-ranges: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    
    # Documentation and metadata
    service.description: "Financial Wellness Service - Provides personalized financial recommendations, goal tracking, and wellness analytics"
    service.owner: "financial-services-team"
    service.repository: "https://github.com/financial-platform/financial-wellness-service"
    service.documentation: "https://docs.financial-platform.com/services/financial-wellness"
    
    # Security annotations
    security.alpha.kubernetes.io/sysctls: "net.core.somaxconn=65535"
    security.financial.encryption: "tls-1.3"
    
    # Performance and scaling
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  # Service type - ClusterIP for internal communication within the cluster
  type: ClusterIP
  
  # IP family configuration for dual-stack support
  ipFamilyPolicy: PreferDualStack
  ipFamilies:
    - IPv4
    - IPv6
  
  # Selector to identify the pods this service should route traffic to
  selector:
    app: financial-wellness-service
    component: backend
    tier: microservice
  
  # Port configuration
  ports:
    # Primary HTTP port for API traffic
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
      appProtocol: http
    
    # Management port for Spring Boot Actuator endpoints
    - name: management
      protocol: TCP
      port: 8081
      targetPort: 8081
      appProtocol: http
    
    # Metrics port for Prometheus scraping
    - name: metrics
      protocol: TCP
      port: 9090
      targetPort: 9090
      appProtocol: http
    
    # Health check port
    - name: health
      protocol: TCP
      port: 8082
      targetPort: 8082
      appProtocol: http
  
  # Session affinity for maintaining user sessions
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hours for financial session management
  
  # External traffic policy for maintaining source IP
  externalTrafficPolicy: Local
  
  # Internal traffic policy for optimized routing
  internalTrafficPolicy: Local
  
  # Publish not ready addresses for gradual traffic ramping
  publishNotReadyAddresses: false