# Jaeger Deployment for Unified Financial Services Platform
# This deployment provides distributed tracing capabilities for microservices
# Version: jaegertracing/all-in-one:1.51 (as per technical specification 3.3.5)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: ufs
  labels:
    app: jaeger
    component: observability
    tier: monitoring
    version: "1.51"
    environment: production
    criticality: standard
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubernetes.io/description: "Jaeger distributed tracing system for financial services platform"
    prometheus.io/scrape: "true"
    prometheus.io/port: "14269"
    prometheus.io/path: "/metrics"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: jaeger
      component: observability
  template:
    metadata:
      labels:
        app: jaeger
        component: observability
        tier: monitoring
        version: "1.51"
        environment: production
        criticality: standard
      annotations:
        # Disable Istio injection for Jaeger to avoid tracing loops
        sidecar.istio.io/inject: "false"
        # Prometheus scraping configuration
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
        # Security context annotations
        container.apparmor.security.beta.kubernetes.io/jaeger: runtime/default
    spec:
      # Security context for the pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      
      # Service account for RBAC
      serviceAccountName: jaeger
      
      # Node selection for observability workloads
      nodeSelector:
        kubernetes.io/os: linux
        node-type: monitoring
      
      # Tolerations for dedicated monitoring nodes
      tolerations:
        - key: "monitoring"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      
      # Affinity rules for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["jaeger"]
                topologyKey: kubernetes.io/hostname
      
      containers:
        - name: jaeger
          # Using official Jaeger all-in-one image as specified in tech stack
          image: jaegertracing/all-in-one:1.51
          imagePullPolicy: IfNotPresent
          
          # Security context for container
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          
          # Port configuration for all Jaeger protocols
          ports:
            # Jaeger Agent ports
            - containerPort: 5775
              name: zk-compact-trft
              protocol: UDP
            - containerPort: 5778
              name: config-rest
              protocol: TCP
            - containerPort: 6831
              name: jg-compact-trft
              protocol: UDP
            - containerPort: 6832
              name: jg-binary-trft
              protocol: UDP
            
            # Jaeger Collector ports
            - containerPort: 9411
              name: zipkin
              protocol: TCP
            - containerPort: 14250
              name: grpc
              protocol: TCP
            - containerPort: 14268
              name: http-collector
              protocol: TCP
            
            # Jaeger Query UI port
            - containerPort: 16686
              name: http-query
              protocol: TCP
            
            # Metrics endpoint for Prometheus
            - containerPort: 14269
              name: admin
              protocol: TCP
          
          # Environment variables for Jaeger configuration
          env:
            # Zipkin compatibility endpoint
            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: ":9411"
            
            # Storage configuration - using memory for all-in-one deployment
            - name: SPAN_STORAGE_TYPE
              value: "memory"
            
            # Logging configuration
            - name: LOG_LEVEL
              value: "info"
            
            # Memory store configuration
            - name: MEMORY_MAX_TRACES
              value: "50000"
            
            # Sampling configuration for financial services
            - name: COLLECTOR_OTLP_ENABLED
              value: "true"
            
            # Admin UI configuration
            - name: ADMIN_HTTP_HOST_PORT
              value: ":14269"
            
            # Query service configuration
            - name: QUERY_BASE_PATH
              value: "/jaeger"
            
            # Security headers
            - name: QUERY_ADDITIONAL_HEADERS
              value: "X-Frame-Options:DENY,X-Content-Type-Options:nosniff,X-XSS-Protection:1; mode=block"
            
            # Timezone configuration
            - name: TZ
              value: "UTC"
          
          # Resource allocation as per financial services QoS requirements
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "2Gi"
          
          # Readiness probe to ensure Jaeger is ready to receive traffic
          readinessProbe:
            httpGet:
              path: "/"
              port: 16686
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          
          # Liveness probe to ensure Jaeger is healthy
          livenessProbe:
            httpGet:
              path: "/"
              port: 16686
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          
          # Startup probe for initial container startup
          startupProbe:
            httpGet:
              path: "/"
              port: 16686
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          
          # Volume mounts for temporary storage
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: jaeger-tmp
              mountPath: /var/tmp
      
      # Volumes for temporary storage (required for read-only root filesystem)
      volumes:
        - name: tmp-volume
          emptyDir:
            sizeLimit: 1Gi
        - name: jaeger-tmp
          emptyDir:
            sizeLimit: 1Gi
      
      # DNS configuration for service discovery
      dnsPolicy: ClusterFirst
      
      # Restart policy
      restartPolicy: Always
      
      # Termination grace period for graceful shutdown
      terminationGracePeriodSeconds: 30